name: Publish to npm

on:
  workflow_dispatch:
    inputs:
      tag_input:
        description: "Tag version"
        required: true
        default: "v0.0.0"

jobs:
  run-with-input:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"

      - name: Install dependencies
        run: pnpm install

      - name: Update package.json version
        run: |
          echo "Updating package.json to version ${{ github.event.inputs.tag_input }}"
          pnpm version ${{ github.event.inputs.tag_input }} --no-git-tag-version
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Commit and push version changes to a new branch
        run: |
          BRANCH_NAME="update-version-${{ github.event.inputs.tag_input }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b $BRANCH_NAME
          git add package.json
          git commit -m "Update version to ${{ github.event.inputs.tag_input }}"
          git push origin $BRANCH_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Create a pull request
        uses: actions/github-script@v6
        with:
          script: |
            const TAG_VERSION = '${{ github.event.inputs.tag_input }}';
            const branchName = `update-version-${TAG_VERSION}`;
            const baseBranch = 'main';
            const title = `Update version to ${TAG_VERSION}`;
            const body = `This PR updates the package.json to version ${TAG_VERSION}.`;

            await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              head: branchName,
              base: baseBranch
            });
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Merge the pull request
        uses: actions/github-script@v6
        with:
          script: |
            const TAG_VERSION = '${{ github.event.inputs.tag_input }}';
            const branchName = `update-version-${TAG_VERSION}`;
            const pulls = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${branchName}`,
              state: 'open'
            });

            if (pulls.data.length > 0) {
              const pullRequest = pulls.data[0];
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pullRequest.number
              });
            }
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Checkout main branch and update the tag
        run: |
          git fetch origin main
          git checkout main
          git pull origin main
          echo "Creating and pushing tag ${{ github.event.inputs.tag_input }}"
          git tag  ${{ github.event.inputs.tag_input }}
          git push origin  ${{ github.event.inputs.tag_input }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      # - name: Publish to npm
      #   run: pnpm publishnpm
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
